# Generated by Django 4.1.3 on 2023-03-03 05:57

import django.contrib.auth.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="users",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("FirstName", models.CharField(max_length=255)),
                ("LastName", models.CharField(max_length=255)),
                ("Email", models.EmailField(max_length=255, unique=True)),
                ("Password", models.CharField(default="Password", max_length=255)),
                ("Roles", models.CharField(max_length=255)),
                ("Consent", models.CharField(max_length=50)),
                ("Organization", models.CharField(max_length=255, null=True)),
                ("Approve", models.CharField(max_length=50, null=True)),
            ],
            options={
                "db_table": "users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="permissions",
            fields=[
                (
                    "role",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("metrics", models.CharField(blank=True, max_length=255, null=True)),
                ("network", models.CharField(blank=True, max_length=10, null=True)),
                ("readwrite", models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                "db_table": "permissions",
            },
        ),
        migrations.CreateModel(
            name="posts",
            fields=[
                (
                    "product",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("Type", models.CharField(max_length=255)),
                ("Quantity", models.IntegerField()),
                ("Units", models.CharField(max_length=3)),
                ("Description", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "posts",
            },
        ),
        migrations.CreateModel(
            name="tracker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Category", models.CharField(max_length=255)),
                ("Description", models.CharField(max_length=255)),
                ("Quantity", models.IntegerField()),
                ("Qunits", models.CharField(max_length=255)),
                ("amountToClients", models.IntegerField()),
                ("amountToAFeed", models.IntegerField()),
                ("amountToCompost", models.IntegerField()),
                ("amountToPartNet", models.IntegerField()),
                ("amountToLandfill", models.IntegerField()),
                ("percentClients", models.IntegerField()),
                ("percentAFeed", models.IntegerField()),
                ("percentCompost", models.IntegerField()),
                ("percentPartNet", models.IntegerField()),
                ("percentLandfill", models.IntegerField()),
            ],
            options={
                "db_table": "tracker",
            },
        ),
    ]
